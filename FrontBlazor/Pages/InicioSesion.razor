@page "/InicioSesion"

@using Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Iniciar Sesión</h3>

<input @bind="username" placeholder="Usuario" />
<input @bind="password" placeholder="Contraseña" type="password" />
<button @onclick="Login">Entrar</button>

@if (!string.IsNullOrEmpty(error)) { <p style="color:red">@error</p> }

@code {
    private string username;
    private string password;
    private string error;

    private async Task Login()
    {
        var success = await AuthService.LoginAsync(username, password);
        if (success)
        {
            Navigation.NavigateTo("/historias");
        }
        else
        {
            error = "Usuario o contraseña incorrectos";
        }
    }
}



@* 

@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation

<EditForm Model="_model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="_model.Username" placeholder="Usuario" />
    <InputText @bind-Value="_model.Password" type="password" placeholder="Contraseña" />
    <button type="submit">Iniciar sesión</button>
</EditForm>

@code {
    private LoginModel _model = new();

    private async Task HandleLogin()
    {
        var success = await AuthService.Login(_model);
        if (success)
            Navigation.NavigateTo("/historias");
        else
            Console.WriteLine("Login fallido");
    }
}
 *@